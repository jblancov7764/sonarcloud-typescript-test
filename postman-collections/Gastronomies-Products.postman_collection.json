{
	"info": {
		"_postman_id": "5eb4ee4c-a360-4c2e-8454-635852274d8e",
		"name": "Gastronomies-Products",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23051980"
	},
	"item": [
		{
			"name": "Add a product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"product_id\",data.id);",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"random_name\",\r\n    \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed fringilla, sapien vel suscipit congue, tortor mi tincidunt justo, id ornare arcu mauris nec nibh. In tristique orci vitae nibh consequat porttitor. Sed molestie faucibus laoreet. Praesent tempor placerat neque tincidunt finibus. Morbi id tincidunt elit. Duis convallis odio vitae faucibus semper. Praesent sodales in enim at porttitor. Donec blandit augue non hendrerit auctor. Integer rutrum venenatis rutrum. Sed eu porttitor ex. Nulla facilisis mattis orci, quis viverra leo bibendum vitae. Donec hendrerit erat eget ipsum posuere convallis blandit id risus. Quisque sit amet metus iaculis, sodales quam a, aliquam neque.\",\r\n    \"history\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed fringilla, sapien vel suscipit congue, tortor mi tincidunt justo, id ornare arcu mauris nec nibh. In tristique orci vitae nibh consequat porttitor. Sed molestie faucibus laoreet. Praesent tempor placerat neque tincidunt finibus. Morbi id tincidunt elit. Duis convallis odio vitae faucibus semper. Praesent sodales in enim at porttitor. Donec blandit augue non hendrerit auctor. Integer rutrum venenatis rutrum. Sed eu porttitor ex. Nulla facilisis mattis orci, quis viverra leo bibendum vitae. Donec hendrerit erat eget ipsum posuere convallis blandit id risus. Quisque sit amet metus iaculis, sodales quam a, aliquam neque.\",\r\n    \"category\": \"PROTEINS\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/products",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": [
				{
					"name": "Add a product",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"random_name\",\r\n    \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed fringilla, sapien vel suscipit congue, tortor mi tincidunt justo, id ornare arcu mauris nec nibh. In tristique orci vitae nibh consequat porttitor. Sed molestie faucibus laoreet. Praesent tempor placerat neque tincidunt finibus. Morbi id tincidunt elit. Duis convallis odio vitae faucibus semper. Praesent sodales in enim at porttitor. Donec blandit augue non hendrerit auctor. Integer rutrum venenatis rutrum. Sed eu porttitor ex. Nulla facilisis mattis orci, quis viverra leo bibendum vitae. Donec hendrerit erat eget ipsum posuere convallis blandit id risus. Quisque sit amet metus iaculis, sodales quam a, aliquam neque.\",\r\n    \"history\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed fringilla, sapien vel suscipit congue, tortor mi tincidunt justo, id ornare arcu mauris nec nibh. In tristique orci vitae nibh consequat porttitor. Sed molestie faucibus laoreet. Praesent tempor placerat neque tincidunt finibus. Morbi id tincidunt elit. Duis convallis odio vitae faucibus semper. Praesent sodales in enim at porttitor. Donec blandit augue non hendrerit auctor. Integer rutrum venenatis rutrum. Sed eu porttitor ex. Nulla facilisis mattis orci, quis viverra leo bibendum vitae. Donec hendrerit erat eget ipsum posuere convallis blandit id risus. Quisque sit amet metus iaculis, sodales quam a, aliquam neque.\",\r\n    \"category\": \"PROTEINS\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"0a825b6f-b2dc-4267-bfda-590843cddba2\",\n    \"name\": \"random_name\",\n    \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed fringilla, sapien vel suscipit congue, tortor mi tincidunt justo, id ornare arcu mauris nec nibh. In tristique orci vitae nibh consequat porttitor. Sed molestie faucibus laoreet. Praesent tempor placerat neque tincidunt finibus. Morbi id tincidunt elit. Duis convallis odio vitae faucibus semper. Praesent sodales in enim at porttitor. Donec blandit augue non hendrerit auctor. Integer rutrum venenatis rutrum. Sed eu porttitor ex. Nulla facilisis mattis orci, quis viverra leo bibendum vitae. Donec hendrerit erat eget ipsum posuere convallis blandit id risus. Quisque sit amet metus iaculis, sodales quam a, aliquam neque.\",\n    \"history\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed fringilla, sapien vel suscipit congue, tortor mi tincidunt justo, id ornare arcu mauris nec nibh. In tristique orci vitae nibh consequat porttitor. Sed molestie faucibus laoreet. Praesent tempor placerat neque tincidunt finibus. Morbi id tincidunt elit. Duis convallis odio vitae faucibus semper. Praesent sodales in enim at porttitor. Donec blandit augue non hendrerit auctor. Integer rutrum venenatis rutrum. Sed eu porttitor ex. Nulla facilisis mattis orci, quis viverra leo bibendum vitae. Donec hendrerit erat eget ipsum posuere convallis blandit id risus. Quisque sit amet metus iaculis, sodales quam a, aliquam neque.\",\n    \"category\": \"PROTEINS\"\n}"
				},
				{
					"name": "Add a invalid product",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": 111,\r\n    \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed fringilla, sapien vel suscipit congue, tortor mi tincidunt justo, id ornare arcu mauris nec nibh. In tristique orci vitae nibh consequat porttitor. Sed molestie faucibus laoreet. Praesent tempor placerat neque tincidunt finibus. Morbi id tincidunt elit. Duis convallis odio vitae faucibus semper. Praesent sodales in enim at porttitor. Donec blandit augue non hendrerit auctor. Integer rutrum venenatis rutrum. Sed eu porttitor ex. Nulla facilisis mattis orci, quis viverra leo bibendum vitae. Donec hendrerit erat eget ipsum posuere convallis blandit id risus. Quisque sit amet metus iaculis, sodales quam a, aliquam neque.\",\r\n    \"history\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed fringilla, sapien vel suscipit congue, tortor mi tincidunt justo, id ornare arcu mauris nec nibh. In tristique orci vitae nibh consequat porttitor. Sed molestie faucibus laoreet. Praesent tempor placerat neque tincidunt finibus. Morbi id tincidunt elit. Duis convallis odio vitae faucibus semper. Praesent sodales in enim at porttitor. Donec blandit augue non hendrerit auctor. Integer rutrum venenatis rutrum. Sed eu porttitor ex. Nulla facilisis mattis orci, quis viverra leo bibendum vitae. Donec hendrerit erat eget ipsum posuere convallis blandit id risus. Quisque sit amet metus iaculis, sodales quam a, aliquam neque.\",\r\n    \"category\": \"PROTEINS\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\" : 400,\n    \"message\" : \"name has an invalid value\"\n}"
				}
			]
		},
		{
			"name": "Add a product to a gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products/{{product_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"{{gastronomy_id}}",
						"products",
						"{{product_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Add a product to a gastronomy",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products/{{product_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"{{gastronomy_id}}",
								"products",
								"{{product_id}}"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-next",
							"value": "anim est fugiat do",
							"description": "A link to the next page of responses"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"name\": \"cultura gastronómica italiana\",\n    \"description\": \"Si tratamos de imaginarnos la cultura gastronímica italiana, la mayoría de la gente va a pensar en pasta o pizza, espagueti o salchichas. Pero como la mayoría de las tierras antiguas y con una larga historia, Italia tiene una cocina muy variada. Las variaciones regionales no se aprecian en ninguna parte de una forma tan brusca como la diferencia que existe entre la cocina del norte y la cocina del sur de Italia.\",\n    \"country\": \"Italia\",\n    \"products\": [\n            {\n                \"id\" : 1,\n                \"name\": \"\",\n                \"description\" : \"\",\n                \"history\" : \"\",\n                \"category\" : \"\"\n            }\n        ]\n}"
				}
			]
		},
		{
			"name": "Add a product to an invalid gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get error invalid gastronomy\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.include(\"The gastronomy with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/00000000-0000-0000-0000-000000000000/products/{{product_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"00000000-0000-0000-0000-000000000000",
						"products",
						"{{product_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Add a product to an invalid gastronomy",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/gastronomies/00000000-0000-0000-0000-000000000000/products/{{product_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"00000000-0000-0000-0000-000000000000",
								"products",
								"{{product_id}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The gastronomy with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Add an invalid product to a gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get error invalid product\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.include(\"The product with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"{{gastronomy_id}}",
						"products",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Add an invalid product to a gastronomy",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"{{gastronomy_id}}",
								"products",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The product with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Get a product of a gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Contains product\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.id).to.include(pm.globals.get(\"product_id\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products/{{product_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"{{gastronomy_id}}",
						"products",
						"{{product_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Get a product of a gastronomy",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products/{{product_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"{{gastronomy_id}}",
								"products",
								"{{product_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-next",
							"value": "anim est fugiat do",
							"description": "A link to the next page of responses"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"name\": \"\",\n    \"description\": \"\",\n    \"history\": \"\",\n    \"category\": \"\"\n}"
				}
			]
		},
		{
			"name": "Get an invalid product of a gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get error invalid product\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.include(\"The product with the given id was not found in the gastronomy\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"{{gastronomy_id}}",
						"products",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Get an invalid product of a gastronomy",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"{{gastronomy_id}}",
								"products",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The product with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Get a product of an invalid gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get error invalid gastronomy\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.include(\"The gastronomy with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/00000000-0000-0000-0000-000000000000/products/{{product_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"00000000-0000-0000-0000-000000000000",
						"products",
						"{{product_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Get a product of an invalid gastronomy",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/gastronomies/00000000-0000-0000-0000-000000000000/products/{{product_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"00000000-0000-0000-0000-000000000000",
								"products",
								"{{product_id}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The gastronomy with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Get a product of a non-associated gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get error invalid product\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.include(\"The product with the given id was not found in the gastronomy\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products/{{product_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"{{gastronomy_id}}",
						"products",
						"{{product_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Get a product of a non-associated gastronomy",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products/{{product_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"{{gastronomy_id}}",
								"products",
								"{{product_id_2}}"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-next",
							"value": "anim est fugiat do",
							"description": "A link to the next page of responses"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n   \"statusCode\": 412,\n   \"message\": \"The product with the given id is not associated to the gastronomy\"\n}"
				}
			]
		},
		{
			"name": "Get all products of a gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Number of products > ' + 0, function () {",
							"   var data = pm.response.json()",
							"   pm.expect(data.length).to.greaterThan(0)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"{{gastronomy_id}}",
						"products"
					]
				}
			},
			"response": [
				{
					"name": "Get all products of a gastronomy",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"{{gastronomy_id}}",
								"products"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-next",
							"value": "anim est fugiat do",
							"description": "A link to the next page of responses"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n    {\n    \"id\": 1,\n    \"name\": \"\",\n    \"description\": \"\",\n    \"history\": \"\",\n    \"category\": \"\"\n    }\n]"
				}
			]
		},
		{
			"name": "Get all products of an invalid gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get error invalid gastronomy\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.include(\"The gastronomy with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/00000000-0000-0000-0000-000000000000/products",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"00000000-0000-0000-0000-000000000000",
						"products"
					]
				}
			},
			"response": [
				{
					"name": "Get all products of an invalid gastronomy",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/gastronomies/00000000-0000-0000-0000-000000000000/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"00000000-0000-0000-0000-000000000000",
								"products"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The gastronomy with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Update products of a gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": \"{{product_id}}\"\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"{{gastronomy_id}}",
						"products"
					]
				}
			},
			"response": [
				{
					"name": "Update a product of a gastronomy",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": {{product_id_2}}\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"{{gastronomy_id}}",
								"products"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-next",
							"value": "anim est fugiat do",
							"description": "A link to the next page of responses"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"name\": \"cultura gastronómica italiana\",\n    \"description\": \"Si tratamos de imaginarnos la cultura gastronímica italiana, la mayoría de la gente va a pensar en pasta o pizza, espagueti o salchichas. Pero como la mayoría de las tierras antiguas y con una larga historia, Italia tiene una cocina muy variada. Las variaciones regionales no se aprecian en ninguna parte de una forma tan brusca como la diferencia que existe entre la cocina del norte y la cocina del sur de Italia.\",\n    \"country\": \"Italia\",\n    \"restaurants\": [\n        {\n            \"id\": 2,\n            \"name\": \"\",\n            \"description\": \"\",\n            \"history\": \"\",\n            \"category\": \"\"\n        }\n    ]\n}\n"
				}
			]
		},
		{
			"name": "Update product of an invalid gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get error invalid gastronomy\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.include(\"The gastronomy with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": \"{{product_id}}\"\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/gastronomies/00000000-0000-0000-0000-000000000000/products",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"00000000-0000-0000-0000-000000000000",
						"products"
					]
				}
			},
			"response": [
				{
					"name": "Update product of an invalid gastronomy",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"{{product_id}}\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/gastronomies/00000000-0000-0000-0000-000000000000/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"00000000-0000-0000-0000-000000000000",
								"products"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The gastronomy with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Update invalid product of a gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get error invalid product\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.include(\"The product with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"{{gastronomy_id}}",
						"products"
					]
				}
			},
			"response": [
				{
					"name": "Update invalid product of a gastronomy",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"{{gastronomy_id}}",
								"products"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The product with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Delete a product of a gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products/{{product_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"{{gastronomy_id}}",
						"products",
						"{{product_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a product of a gastronomy",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products/{{product_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"{{gastronomy_id}}",
								"products",
								"{{product_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-next",
							"value": "anim est fugiat do",
							"description": "A link to the next page of responses"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Delete an invalid product of a gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get error invalid product\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.include(\"The product with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"{{gastronomy_id}}",
						"products",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Delete an invalid product of a gastronomy",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"{{gastronomy_id}}",
								"products",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The product with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Delete a product of an invalid gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get error invalid gastronomy\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.include(\"The gastronomy with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/00000000-0000-0000-0000-000000000000/products/{{product_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"00000000-0000-0000-0000-000000000000",
						"products",
						"{{product_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a product of an invalid gastronomy",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/gastronomies/00000000-0000-0000-0000-000000000000/products/{{product_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"00000000-0000-0000-0000-000000000000",
								"products",
								"{{product_id}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The gastronomy with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Delete a product of a non-associated gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products/{{product_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"{{gastronomy_id}}",
						"products",
						"{{product_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a product of a non-associated gastronomy",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products/{{product_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"{{gastronomy_id}}",
								"products",
								"{{product_id_2}}"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-next",
							"value": "anim est fugiat do",
							"description": "A link to the next page of responses"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n   \"statusCode\": 412,\n   \"message\": \"The product with the given id is not associated to the gastronomy\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		}
	]
}