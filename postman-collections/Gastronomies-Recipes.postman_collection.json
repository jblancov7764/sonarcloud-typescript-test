{
	"info": {
		"_postman_id": "5483a991-6060-4a5e-8eb7-b14fd0bbeb9a",
		"name": "Gastronomies-Recipes",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23051980"
	},
	"item": [
		{
			"name": "Add a recipe to a gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/recipes/{{recipe_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"{{gastronomy_id}}",
						"recipes",
						"{{recipe_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Add a recipe to a gastronomy",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/recipes/{{recipe_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"{{gastronomy_id}}",
								"recipes",
								"{{recipe_id}}"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-next",
							"value": "anim est fugiat do",
							"description": "A link to the next page of responses"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"name\": \"cultura gastronómica italiana\",\n    \"description\": \"Si tratamos de imaginarnos la cultura gastronímica italiana, la mayoría de la gente va a pensar en pasta o pizza, espagueti o salchichas. Pero como la mayoría de las tierras antiguas y con una larga historia, Italia tiene una cocina muy variada. Las variaciones regionales no se aprecian en ninguna parte de una forma tan brusca como la diferencia que existe entre la cocina del norte y la cocina del sur de Italia.\",\n    \"country\": \"Italia\",\n    \"recipes\": [\n            {\n                \"id\" : 1,\n                \"name\": \"\",\n                \"description\" : \"\",\n                \"photo\" : \"\",\n                \"steps\" : \"\",\n                \"video\" : \"\"\n            }\n        ]\n}"
				}
			]
		},
		{
			"name": "Add a recipe to an invalid gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The gastronomy with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/00000000-0000-0000-0000-000000000000/products/{{recipe_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"00000000-0000-0000-0000-000000000000",
						"products",
						"{{recipe_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Add a recipe to an invalid gastronomy",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/gastronomies/00000000-0000-0000-0000-000000000000/products/{{recipe_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"00000000-0000-0000-0000-000000000000",
								"products",
								"{{recipe_id}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The gastronomy with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Add an invalid recipe to a gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The recipe with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"{{gastronomy_id}}",
						"products",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Add an invalid recipe to a gastronomy",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"{{gastronomy_id}}",
								"products",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The recipe with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Get a recipe of a gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products/{{recipe_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"{{gastronomy_id}}",
						"products",
						"{{recipe_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Get a recipe of a gastronomy",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products/{{recipe_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"{{gastronomy_id}}",
								"products",
								"{{recipe_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-next",
							"value": "anim est fugiat do",
							"description": "A link to the next page of responses"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"name\": \"\",\n    \"description\": \"\",\n    \"photo\": \"\",\n    \"steps\": \"\",\n    \"video\": \"\"\n}"
				}
			]
		},
		{
			"name": "Get an invalid recipe of a gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The recipe with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"{{gastronomy_id}}",
						"products",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Get an invalid recipe of a gastronomy",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"{{gastronomy_id}}",
								"products",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The recipe with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Get a recipe of an invalid gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The gastronomy with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/00000000-0000-0000-0000-000000000000/recipes/{{recipe_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"00000000-0000-0000-0000-000000000000",
						"recipes",
						"{{recipe_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Get a recipe of an invalid gastronomy",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/gastronomies/00000000-0000-0000-0000-000000000000/recipes/{{recipe_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"00000000-0000-0000-0000-000000000000",
								"recipes",
								"{{recipe_id}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The gastronomy with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Get a recipe of a non-associated gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The recipe with the given id is not associated to the gastronomy\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products/{{recipe_id_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"{{gastronomy_id}}",
						"products",
						"{{recipe_id_2}}"
					]
				}
			},
			"response": [
				{
					"name": "Get a recipe of a non-associated gastronomy",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/products/{{recipe_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"{{gastronomy_id}}",
								"products",
								"{{recipe_id_2}}"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-next",
							"value": "anim est fugiat do",
							"description": "A link to the next page of responses"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n   \"statusCode\": 412,\n   \"message\": \"The recipe with the given id is not associated to the gastronomy\"\n}"
				}
			]
		},
		{
			"name": "Get all recipes of a gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/recipes",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"{{gastronomy_id}}",
						"recipes"
					]
				}
			},
			"response": [
				{
					"name": "Get all recipes of a gastronomy",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/recipes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"{{gastronomy_id}}",
								"recipes"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-next",
							"value": "anim est fugiat do",
							"description": "A link to the next page of responses"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n    {\n    \"id\": 1,\n    \"name\": \"\",\n    \"description\": \"\",\n    \"photo\": \"\",\n    \"steps\": \"\",\n    \"video\": \"\"\n    }\n]"
				}
			]
		},
		{
			"name": "Get all recipes of an invalid gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The gastronomy with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/00000000-0000-0000-0000-000000000000/recipes",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"00000000-0000-0000-0000-000000000000",
						"recipes"
					]
				}
			},
			"response": [
				{
					"name": "Get all recipes of an invalid gastronomy",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/gastronomies/00000000-0000-0000-0000-000000000000/recipes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"00000000-0000-0000-0000-000000000000",
								"recipes"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The gastronomy with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Update recipes of a gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/restaurants",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"{{gastronomy_id}}",
						"restaurants"
					]
				}
			},
			"response": [
				{
					"name": "Update recipes of a gastronomy",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": {{recipe_id_2}}\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/recipes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"{{gastronomy_id}}",
								"recipes"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-next",
							"value": "anim est fugiat do",
							"description": "A link to the next page of responses"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"name\": \"cultura gastronómica italiana\",\n    \"description\": \"Si tratamos de imaginarnos la cultura gastronímica italiana, la mayoría de la gente va a pensar en pasta o pizza, espagueti o salchichas. Pero como la mayoría de las tierras antiguas y con una larga historia, Italia tiene una cocina muy variada. Las variaciones regionales no se aprecian en ninguna parte de una forma tan brusca como la diferencia que existe entre la cocina del norte y la cocina del sur de Italia.\",\n    \"country\": \"Italia\",\n    \"recipes\" : [\n            {\n                \"id\" : 1,\n                \"name\": \"\",\n                \"description\" : \"\",\n                \"photo\" : \"\",\n                \"steps\" : \"\",\n                \"video\" : \"\"\n            }\n        ]\n}\n"
				}
			]
		},
		{
			"name": "Update recipes of an invalid gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The recipe with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/00000000-0000-0000-0000-000000000000/recipes",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"00000000-0000-0000-0000-000000000000",
						"recipes"
					]
				}
			},
			"response": [
				{
					"name": "Update recipes of an invalid gastronomy",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": {{restaurant_id_2}}\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/gastronomies/00000000-0000-0000-0000-000000000000/recipes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"00000000-0000-0000-0000-000000000000",
								"recipes"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The gastronomy with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Update invalid recipes of a gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The gastronomy with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/recipes",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"{{gastronomy_id}}",
						"recipes"
					]
				}
			},
			"response": [
				{
					"name": "Update invalid recipes of a gastronomy",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/recipes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"{{gastronomy_id}}",
								"recipes"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The recipe with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Delete a recipe of a gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/restaurants/{{restaurant_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"{{gastronomy_id}}",
						"restaurants",
						"{{restaurant_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a recipe of a gastronomy",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/recipes/{{recipe_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"{{gastronomy_id}}",
								"recipes",
								"{{recipe_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-next",
							"value": "anim est fugiat do",
							"description": "A link to the next page of responses"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Delete an invalid recipe of a gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The recipe with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/recipes/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"{{gastronomy_id}}",
						"recipes",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Delete an invalid recipe of a gastronomy",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/recipes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"{{gastronomy_id}}",
								"recipes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The recipe with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Delete a recipe of an invalid gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The gastronomy with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/00000000-0000-0000-0000-000000000000/recipes/{{recipe_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"00000000-0000-0000-0000-000000000000",
						"recipes",
						"{{recipe_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a recipe of an invalid gastronomy",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/gastronomies/00000000-0000-0000-0000-000000000000/recipes/{{recipe_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"00000000-0000-0000-0000-000000000000",
								"recipes",
								"{{recipe_id}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The gastronomy with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Delete a recipe of a non-associated gastronomy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The recipe with the given id is not associated to the gastronomy\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/recipes/{{recipe_id_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"gastronomies",
						"{{gastronomy_id}}",
						"recipes",
						"{{recipe_id_2}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a recipe of a non-associated gastronomy",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/gastronomies/{{gastronomy_id}}/recipes/{{recipe_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gastronomies",
								"{{gastronomy_id}}",
								"recipes",
								"{{recipe_id_2}}"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-next",
							"value": "anim est fugiat do",
							"description": "A link to the next page of responses"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n   \"statusCode\": 412,\n   \"message\": \"The recipe with the given id is not associated to the gastronomy\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		},
		{
			"key": "gastronomy_id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "recipe_id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "recipe_id_2",
			"value": "2",
			"type": "string"
		}
	]
}