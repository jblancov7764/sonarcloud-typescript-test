{
	"info": {
		"_postman_id": "b6b286b3-cff1-4aa6-90d0-818e6b4618e1",
		"name": "Restaurants",
		"description": "Documentation for the resource Restaurants",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23051980"
	},
	"item": [
		{
			"name": "Add a restaurant",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"restaurant_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"name\": \"Andrés Carne de Res\",\r\n   \"city\": \"Bogotá\",\r\n   \"country\": \"Colombia\",\r\n   \"michellinStars\": 3,\r\n   \"lastMichellinStarDate\": \"03/08/2014\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/restaurants",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurants"
					]
				},
				"description": "This request creates a Restaurant. The API returns the created resource with the assigned ID."
			},
			"response": [
				{
					"name": "Add a restaurant",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"name\": \"Andrés Carne de Res\",\r\n   \"city\": \"Bogotá\",\r\n   \"country\": \"Colombia\",\r\n   \"michellinStars\": 3,\r\n   \"lastMichellinStarDate\": \"03/08/2014\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-next",
							"value": "esse",
							"description": "A link to the next page of responses"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"name\": \"Andrés Carne de Res\",\n    \"city\": \"Bogotá\",\n    \"country\": \"Colombia\",\n    \"michellinStars\": 3,\n    \"lastMichellinStarDate\": \"03/08/2014\"\n}"
				}
			]
		},
		{
			"name": "Get all restaurants",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of restaurants > ' + 0, function () {\r",
							"   var data = pm.response.json()\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/restaurants",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurants"
					]
				},
				"description": "This request retrieves all the restaurants. The API returns an array with the information."
			},
			"response": [
				{
					"name": "Get all restaurants",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"name\": \"Andrés Carne de Res\",\r\n   \"city\": \"Bogotá\",\r\n   \"country\": \"Colombia\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-next",
							"value": "esse",
							"description": "A link to the next page of responses"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n    { \n        \"id\": 1,\n        \"name\": \"Andrés Carne de Res\",\n        \"city\": \"Bogotá\",\n        \"country\": \"Colombia\",\n        \"michellinStars\": 3,\n        \"lastMichellinStarDate\": \"03/08/2014\"\n    },\n    { \n        \"id\": 2,\n        \"name\": \"Da Quei Matti\",\n        \"city\": \"Roma\",\n        \"country\": \"Italia\",\n        \"michellinStars\": 3,\n        \"lastMichellinStarDate\": \"03/08/2014\"\n    }\n]"
				}
			]
		},
		{
			"name": "Get one restaurant",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurants",
						"{{restaurant_id}}"
					]
				},
				"description": "This request retrieves a restaurant by a given ID. The API returns a JSON object with the information."
			},
			"response": [
				{
					"name": "Get one restaurant",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/restaurants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-next",
							"value": "esse",
							"description": "A link to the next page of responses"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"name\": \"Andrés Carne de Res\",\n    \"city\": \"Bogotá\",\n    \"country\": \"Colombia\",\n    \"michellinStars\": 3,\n    \"lastMichellinStarDate\": \"03/08/2014\"\n}"
				}
			]
		},
		{
			"name": "Get an invalid restaurant",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The restaurant with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurants",
						"00000000-0000-0000-0000-000000000000"
					]
				},
				"description": "This request retrieves a restaurant by a wrong given ID. The API returns a JSON object with an error."
			},
			"response": [
				{
					"name": "Get an invalid restaurant",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/restaurants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants"
							]
						}
					},
					"status": "OK",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-next",
							"value": "esse",
							"description": "A link to the next page of responses"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The restaurant with the given id was not found\"\n}\n"
				}
			]
		},
		{
			"name": "Update a restaurant",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Andrés Carne de Res\",\r\n    \"city\": \"Chia\",\r\n    \"country\": \"Colombia\",\r\n    \"michellinStars\": 3,\r\n    \"lastMichellinStarDate\": \"03/08/2014\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurants",
						"{{restaurant_id}}"
					]
				},
				"description": "This request updates a restaurant by a given ID. The API returns a JSON object with the updated restaurant."
			},
			"response": [
				{
					"name": "Update a restaurant",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Andrés Carne de Res\",\r\n    \"city\": \"Chia\",\r\n    \"country\": \"Colombia\",\r\n    \"michellinStars\": 3,\r\n    \"lastMichellinStarDate\": \"03/08/2014\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-next",
							"value": "esse",
							"description": "A link to the next page of responses"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\" : 1,\n    \"name\": \"Andrés Carne de Res\",\n    \"city\": \"Chia\",\n    \"country\": \"Colombia\",\n    \"michellinStars\": 3,\n    \"lastMichellinStarDate\": \"03/08/2014\"\n}"
				}
			]
		},
		{
			"name": "Update an invalid restaurant",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The restaurant with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Andrés Carne de Res\",\r\n    \"city\": \"Chia\",\r\n    \"country\": \"Colombia\",\r\n    \"michellinStars\": 3,\r\n    \"lastMichellinStarDate\": \"03/08/2014\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurants",
						"00000000-0000-0000-0000-000000000000"
					]
				},
				"description": "This request updates a restaurant by a wrong given ID. The API returns a JSON object with an error."
			},
			"response": [
				{
					"name": "Update an invalid restaurant",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Andrés Carne de Res\",\r\n    \"city\": \"Chia\",\r\n    \"country\": \"Colombia\",\r\n    \"michellinStars\": 3,\r\n    \"lastMichellinStarDate\": \"03/08/2014\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-next",
							"value": "esse",
							"description": "A link to the next page of responses"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The restaurant with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Delete a restaurant",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurants",
						"{{restaurant_id}}"
					]
				},
				"description": "This request deletes a restaurant by a given ID. The API returns a 204 code."
			},
			"response": [
				{
					"name": "Delete a restaurant",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-next",
							"value": "esse",
							"description": "A link to the next page of responses"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Update an invalid restaurant Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The restaurant with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurants",
						"00000000-0000-0000-0000-000000000000"
					]
				},
				"description": "This request deletes a restaurant by a wrong given ID. The API returns a JSON object with an error."
			},
			"response": [
				{
					"name": "Update an invalid restaurant",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-next",
							"value": "esse",
							"description": "A link to the next page of responses"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The restaurant with the given id was not found\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": " http://localhost:3000/api/v1",
			"type": "string"
		},
		{
			"key": "restaurant_id",
			"value": "1",
			"type": "string"
		}
	]
}